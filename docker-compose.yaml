version: "3.9"

services:
  server:
    image: server:1.0.0
    container_name: ${SERVER_HOST}
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes: 
      - ./server:/server
      - server-v-node-modules:/server/node_modules
    depends_on:
      - postgres
      - mongo

  postgres:
    image: postgres
    container_name: ${POSTGRES_HOST}
    build:
      context: ./database
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-v:/var/lib/postgresql/data
    command: "-p ${POSTGRES_PORT}"
  
  mongo:
    image: mongo
    container_name: ${MONGO_HOST}
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    restart: always
    env_file: .env
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - mongo-v:/data/db

  frontend:
    image: frontend:1.0.0
    container_name: ${FRONTEND_HOST}
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
      - ./frontend:/frontend
      - frontend-v-node-modules:/frontend/node_modules

volumes: 
  server-v-node-modules:
    name: "server-v-node-modules"
  postgres-v:
    name: "postgres-v"
  mongo-v:
    name: "mongo-v"
  frontend-v-node-modules:
    name: "frontend-v-node-modules"


